package org.xtext.sdu.iotvizualizerlanguage.generator;

import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess2;

@SuppressWarnings("all")
public class Precompile {
  public void precompile(final Resource resource, final IFileSystemAccess2 fsa) {
    CharSequence _compileManager = this.compileManager();
    fsa.generateFile("manage.py", _compileManager);
    CharSequence _compileSettings = this.compileSettings();
    fsa.generateFile("webserver\\settings.py", _compileSettings);
    CharSequence _compileInit = this.compileInit();
    fsa.generateFile("webserver\\__init__.py", _compileInit);
    CharSequence _compileWsgi = this.compileWsgi();
    fsa.generateFile("webserver\\wsgi.py", _compileWsgi);
    CharSequence _compileUrls = this.compileUrls();
    fsa.generateFile("webserver\\urls.py", _compileUrls);
  }
  
  public CharSequence compileBaseHtml(){
	  StringConcatenation _builder = new StringConcatenation();
	  
	  return _builder;
  }
  
  public CharSequence compileManager() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("#!/usr/bin/env python");
    _builder.newLine();
    _builder.append("import os");
    _builder.newLine();
    _builder.append("import sys");
    _builder.newLine();
    _builder.newLine();
    _builder.append("if __name__ == \"__main__\":");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"webserver.settings\")");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("from django.core.management import execute_from_command_line");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("execute_from_command_line(sys.argv)");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence compileSettings() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\"\"\"");
    _builder.newLine();
    _builder.append("Django settings for webserver project.");
    _builder.newLine();
    _builder.newLine();
    _builder.append("Generated by \'django-admin startproject\' using Django 1.9.4.");
    _builder.newLine();
    _builder.newLine();
    _builder.append("For more information on this file, see");
    _builder.newLine();
    _builder.append("https://docs.djangoproject.com/en/1.9/topics/settings/");
    _builder.newLine();
    _builder.newLine();
    _builder.append("For the full list of settings and their values, see");
    _builder.newLine();
    _builder.append("https://docs.djangoproject.com/en/1.9/ref/settings/");
    _builder.newLine();
    _builder.append("\"\"\"");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import os");
    _builder.newLine();
    _builder.newLine();
    _builder.append("# Build paths inside the project like this: os.path.join(BASE_DIR, ...)");
    _builder.newLine();
    _builder.append("BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("# Quick-start development settings - unsuitable for production");
    _builder.newLine();
    _builder.append("# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/");
    _builder.newLine();
    _builder.newLine();
    _builder.append("# SECURITY WARNING: keep the secret key used in production secret!");
    _builder.newLine();
    _builder.append("SECRET_KEY = \'o_a&t5askcjj66@%ru2s%wjic2_xcy)n&78=tt@hl%3#)!6usk\'");
    _builder.newLine();
    _builder.newLine();
    _builder.append("# SECURITY WARNING: don\'t run with debug turned on in production!");
    _builder.newLine();
    _builder.append("DEBUG = True");
    _builder.newLine();
    _builder.newLine();
    _builder.append("ALLOWED_HOSTS = []");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("# Application definition");
    _builder.newLine();
    _builder.newLine();
    _builder.append("INSTALLED_APPS = [");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.contrib.admin\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.contrib.auth\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.contrib.contenttypes\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.contrib.sessions\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.contrib.messages\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.contrib.staticfiles\',");
    _builder.newLine();
    _builder.append("]");
    _builder.newLine();
    _builder.newLine();
    _builder.append("MIDDLEWARE_CLASSES = [");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.middleware.security.SecurityMiddleware\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.contrib.sessions.middleware.SessionMiddleware\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.middleware.common.CommonMiddleware\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.middleware.csrf.CsrfViewMiddleware\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.contrib.auth.middleware.AuthenticationMiddleware\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.contrib.auth.middleware.SessionAuthenticationMiddleware\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.contrib.messages.middleware.MessageMiddleware\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'django.middleware.clickjacking.XFrameOptionsMiddleware\',");
    _builder.newLine();
    _builder.append("]");
    _builder.newLine();
    _builder.newLine();
    _builder.append("ROOT_URLCONF = \'webserver.urls\'");
    _builder.newLine();
    _builder.newLine();
    _builder.append("TEMPLATES = [");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\'BACKEND\': \'django.template.backends.django.DjangoTemplates\',");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\'DIRS\': [],");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\'APP_DIRS\': True,");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\'OPTIONS\': {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("\'context_processors\': [");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("\'django.template.context_processors.debug\',");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("\'django.template.context_processors.request\',");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("\'django.contrib.auth.context_processors.auth\',");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("\'django.contrib.messages.context_processors.messages\',");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("],");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("},");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("},");
    _builder.newLine();
    _builder.append("]");
    _builder.newLine();
    _builder.newLine();
    _builder.append("WSGI_APPLICATION = \'webserver.wsgi.application\'");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("# Database");
    _builder.newLine();
    _builder.append("# https://docs.djangoproject.com/en/1.9/ref/settings/#databases");
    _builder.newLine();
    _builder.newLine();
    _builder.append("DATABASES = {");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("\'default\': {");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\'ENGINE\': \'django.db.backends.sqlite3\',");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\'NAME\': os.path.join(BASE_DIR, \'db.sqlite3\'),");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("# Password validation");
    _builder.newLine();
    _builder.append("# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators");
    _builder.newLine();
    _builder.newLine();
    _builder.append("AUTH_PASSWORD_VALIDATORS = [");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\'NAME\': \'django.contrib.auth.password_validation.UserAttributeSimilarityValidator\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("},");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\'NAME\': \'django.contrib.auth.password_validation.MinimumLengthValidator\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("},");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\'NAME\': \'django.contrib.auth.password_validation.CommonPasswordValidator\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("},");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("{");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("\'NAME\': \'django.contrib.auth.password_validation.NumericPasswordValidator\',");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("},");
    _builder.newLine();
    _builder.append("]");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("# Internationalization");
    _builder.newLine();
    _builder.append("# https://docs.djangoproject.com/en/1.9/topics/i18n/");
    _builder.newLine();
    _builder.newLine();
    _builder.append("LANGUAGE_CODE = \'en-us\'");
    _builder.newLine();
    _builder.newLine();
    _builder.append("TIME_ZONE = \'UTC\'");
    _builder.newLine();
    _builder.newLine();
    _builder.append("USE_I18N = True");
    _builder.newLine();
    _builder.newLine();
    _builder.append("USE_L10N = True");
    _builder.newLine();
    _builder.newLine();
    _builder.append("USE_TZ = True");
    _builder.newLine();
    _builder.newLine();
    _builder.newLine();
    _builder.append("# Static files (CSS, JavaScript, Images)");
    _builder.newLine();
    _builder.append("# https://docs.djangoproject.com/en/1.9/howto/static-files/");
    _builder.newLine();
    _builder.newLine();
    _builder.append("STATIC_URL = \'/static/\'");
    _builder.newLine();
    _builder.append("STATIC_ROOT = os.path.join(BASE_DIR, \'static\')");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence compileInit() {
    StringConcatenation _builder = new StringConcatenation();
    return _builder;
  }
  
  public CharSequence compileWsgi() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\"\"\"");
    _builder.newLine();
    _builder.append("WSGI config for webserver project.");
    _builder.newLine();
    _builder.newLine();
    _builder.append("It exposes the WSGI callable as a module-level variable named ``application``.");
    _builder.newLine();
    _builder.newLine();
    _builder.append("For more information on this file, see");
    _builder.newLine();
    _builder.append("https://docs.djangoproject.com/en/1.9/howto/deployment/wsgi/");
    _builder.newLine();
    _builder.append("\"\"\"");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import os");
    _builder.newLine();
    _builder.newLine();
    _builder.append("from django.core.wsgi import get_wsgi_application");
    _builder.newLine();
    _builder.newLine();
    _builder.append("os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"webserver.settings\")");
    _builder.newLine();
    _builder.newLine();
    _builder.append("application = get_wsgi_application()");
    _builder.newLine();
    return _builder;
  }
  
  public CharSequence compileUrls() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\"\"\"example URL Configuration");
    _builder.newLine();
    _builder.newLine();
    _builder.append("The `urlpatterns` list routes URLs to views. For more information please see:");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("https://docs.djangoproject.com/en/1.9/topics/http/urls/");
    _builder.newLine();
    _builder.append("Examples:");
    _builder.newLine();
    _builder.append("Function views");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("1. Add an import:  from my_app import views");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("2. Add a URL to urlpatterns:  url(r\'^$\', views.home, name=\'home\')");
    _builder.newLine();
    _builder.append("Class-based views");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("1. Add an import:  from other_app.views import Home");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("2. Add a URL to urlpatterns:  url(r\'^$\', Home.as_view(), name=\'home\')");
    _builder.newLine();
    _builder.append("Including another URLconf");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("1. Import the include() function: from django.conf.urls import url, include");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("2. Add a URL to urlpatterns:  url(r\'^blog/\', include(\'blog.urls\'))");
    _builder.newLine();
    _builder.append("\"\"\"");
    _builder.newLine();
    _builder.append("from django.conf.urls import include, url");
    _builder.newLine();
    _builder.append("from django.contrib import admin");
    _builder.newLine();
    _builder.newLine();
    _builder.append("urlpatterns = [");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("url(r\'^index/\', include(\'pages.urls\')),");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("url(r\'^admin/\', admin.site.urls),");
    _builder.newLine();
    _builder.append("]");
    _builder.newLine();
    return _builder;
  }
}
