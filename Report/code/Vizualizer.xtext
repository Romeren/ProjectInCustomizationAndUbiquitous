grammar org.xtext.sdu.iotvizualizerlanguage.Vizualizer 
	with org.xtext.sdu.formularzlanguage.Formular

generate vizualizer 
	"http://www.xtext.org/sdu/iotvizualizerlanguage/Vizualizer"

System:
	(pages += Page | sources += Source | schemas += SchemaParser)*
;
Page:
	'Page' name=ID
	'{'
	(tiles += Tile)*
	'}'
;
Tile:
	Link | Graph
;
Link:
	'Link' name=ID 'to' page=[Page]
;
Graph:
	'Graph' name=ID	source=[Datasource] ('label=' lael=STRING)? 
;

Datasource:
	'Datasource' name=ID
	'{'
	'Dimensions' ':'
	dimensions+=Dimension (',' dimensions+=Dimension)*
	'}'
;

Dimension:
	'Formula' name=Formula sourceSelectors+=DimensionSelector ('and' sourceSelectors+=DimensionSelector)*
;

DimensionSelector:
	'using' source=[Source]'[' selectVar=NoQuotesString ']' 'as' name=ID
;

NoQuotesString:
	name=ID
;

Source:
	EndPoint | Datasource
;

EndPoint:
	GetEndPoint | PostEndPoint
;

PostEndPoint:
	'PostPoint' name=ID
	'{'
	'url' url=STRING
	'use Schema' parser=[SchemaParser]
	'}'
;

GetEndPoint:
	'GetPoint' name=ID
	'{'
	'url' url=STRING
	('json' json = STRING)?
	'Headers' '{'
		headers+=Header (',' headers+=Header)*
	'}'
	'use Schema' parser=[SchemaParser]
	'}'
;

Header:
	keyword=STRING ':' value=STRING
;

// A SchemaParser is used to parse a schema(data structure) into a time series
SchemaParser:
	'Schema' name=ID
	'{'
	'SchemaType' '=' schemaType=SchemaType
	selectors+=Selector+
	'}'
;

enum SchemaType:
	XML='XML' | CSV='CSV' | JSON='JSON'
;

// Select the path to a specific dimension of the data
Selector:
	'Selector as ' name=ID '{'
	steps+=STRING (' -> ' steps+=STRING)+
	'}'
;

